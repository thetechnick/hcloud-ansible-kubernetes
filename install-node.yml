# Add a new node to the kubernetes cluster
---
- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
  # Checks
  - name: server_type should be defined
    assert:
      that:
      - server_type is defined and server_type != ''
      msg: "Set the value of 'server_type'."

  - name: public_keys should be defined
    assert:
      that:
      - public_keys is defined and public_keys|length > 0
      msg: "Set the value of 'public_keys'."

  - name: kubeadm_join_command should be defined
    assert:
      that:
      - kubeadm_join_command is defined and kubeadm_join_command != ''
      msg: "Set the value of 'kubeadm_join_command'."

  # Start
  - name: Generate server name
    set_fact:
      node_name: "node-{{ lookup('password', '/dev/null length=10 chars=ascii_letters') | lower }}"
    when: node_name is not defined or node_name == ''

  - name: SSH Key exists
    hcloud_ssh_key:
      name: ansible deploy key
      public_key: "{{ item }}"
      state: present
    register: hcloud_ssh_key
    with_items: "{{ public_keys }}"

  - name: Create server
    hcloud_server:
      name: "{{ node_name }}"
      image: debian-9
      server_type: "{{ server_type }}"
      ssh_keys: "{{ hcloud_ssh_key|json_query('results[*].data') }}"
      state: running
    register: hcloud_server

  - name: Wait for SSH to come up
    wait_for: host={{ hcloud_server.data.public_ipv4 }} port=22 timeout=60

  - name: Add server to node group
    add_host:
      name: "{{ hcloud_server.data.public_ipv4 }}"
      groups: coreos
      hcloud: "{{ hcloud_server.data }}"

- hosts: coreos
  gather_facts: false
  roles:
  - role: coreos
    ssh_keys: "{{ hostvars['localhost'].hcloud_ssh_key|json_query('results[*].data') }}"
    ignition_template: ignition.json.j2
